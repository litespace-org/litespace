CREATE TYPE "user_role" AS ENUM (
	'super-admin',
	'reg-admin',
	'tutor',
	'student',
	'interviewer',
	'media-provider'
);

CREATE TYPE "call_event" AS ENUM (
	'join',
	'leave'
);

CREATE TYPE "call_recording_status" AS ENUM (
	'idle',
	'recording',
	'recorded',
	'queued',
	'empty',
	'processing',
	'processed',
	'processing-failed'
);

CREATE TYPE "user_gender" AS ENUM (
	'male',
	'female'
);

CREATE TYPE "plan_cycle" AS ENUM (
	'month',
	'quarter',
	'biannual',
	'year'
);

CREATE TYPE "interview_status" AS ENUM (
	'pending',
	'passed',
	'rejected',
	'canceled'
);

CREATE TYPE "withdraw_method" AS ENUM (
	'wallet',
	'bank',
	'intsapay'
);

CREATE TYPE "invoice_status" AS ENUM (
	'pending',
	'update-by-reciever',
	'canceled-by-reciever',
	'canceled-by-admin',
	'cancellation-approved-by-admin',
	'fulfilled',
	'rejected'
);
CREATE TABLE "users" (
	"id" SERIAL NOT NULL UNIQUE,
	"email" VARCHAR(50) NOT NULL,
	"password" CHAR(64) NOT NULL,
	"name" VARCHAR(50),
	"image" VARCHAR(255),
	"role" USER_ROLE,
	"birth_year" INTEGER,
	"gender" USER_GENDER,
	"online" BOOLEAN NOT NULL DEFAULT false,
	"verified" BOOLEAN NOT NULL DEFAULT false,
	"phone_number" VARCHAR(15),
	"city" SMALLINT,
	"credit_score" INTEGER NOT NULL DEFAULT 0,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);

CREATE INDEX "users_index_0"
ON "users" ("id");

CREATE TABLE "tutors" (
	"id" SERIAL NOT NULL UNIQUE,
	"bio" VARCHAR(1000),
	"about" TEXT,
	"video" VARCHAR(255),
	"notice" INTEGER NOT NULL DEFAULT 0,
	"activated" BOOLEAN NOT NULL DEFAULT false,
	"activated_by" INTEGER,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);

CREATE INDEX "tutors_index_0"
ON "tutors" ("id");

CREATE TABLE "rules" (
	"id" SERIAL NOT NULL UNIQUE,
	"user_id" SERIAL NOT NULL,
	"title" VARCHAR(255) NOT NULL,
	"frequency" SMALLINT NOT NULL,
	"start" TIMESTAMP NOT NULL,
	"end" TIMESTAMP NOT NULL,
	"time" CHAR(5) NOT NULL,
	"duration" SMALLINT NOT NULL,
	"weekdays" JSONB NOT NULL,
	"monthday" SMALLINT,
	"activated" BOOLEAN NOT NULL DEFAULT true,
	"deleted" BOOLEAN NOT NULL DEFAULT false,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);

CREATE INDEX "rules_index_0"
ON "rules" ("id");

CREATE TABLE "calls" (
	"id" SERIAL NOT NULL UNIQUE,
	"recording_status" CALL_RECORDING_STATUS NOT NULL DEFAULT idle,
	"processing_time" INTEGER,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);

CREATE INDEX "calls_index_0"
ON "calls" ("id");

CREATE TABLE "call_members" (
	"call_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"user_id" INTEGER NOT NULL,
	PRIMARY KEY("call_id", "user_id")
);


CREATE TABLE "call_events" (
	"call_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"user_id" INTEGER NOT NULL,
	"event_type" CALL_EVENT NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("call_id", "user_id")
);


CREATE TABLE "lessons" (
	"id" SERIAL NOT NULL UNIQUE,
	"start" TIMESTAMP NOT NULL,
	"duration" SMALLINT NOT NULL,
	"price" INTEGER NOT NULL,
	"rule_id" INTEGER NOT NULL,
	"call_id" INTEGER NOT NULL,
	"canceled_by" INTEGER,
	"canceled_at" TIMESTAMP,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);

CREATE INDEX "lessons_index_0"
ON "lessons" ("id");

CREATE TABLE "lesson_members" (
	"lesson_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"user_id" INTEGER NOT NULL,
	PRIMARY KEY("lesson_id", "user_id")
);


CREATE TABLE "interviews" (
	"id" SERIAL NOT NULL UNIQUE,
	"start" TIMESTAMP NOT NULL,
	"interviewer_id" INTEGER NOT NULL,
	"interviewee_id" INTEGER NOT NULL,
	"interviewer_feedback" TEXT,
	"interviewee_feedback" TEXT,
	"call_id" INTEGER NOT NULL,
	"rule_id" INTEGER NOT NULL,
	"note" TEXT,
	"level" INTEGER,
	"status" INTERVIEW_STATUS DEFAULT pending,
	"signer" INTEGER,
	"canceled_by" INTEGER,
	"canceled_at" TIMESTAMP,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);

CREATE INDEX "interviews_index_0"
ON "interviews" ("id");

CREATE TABLE "ratings" (
	"id" SERIAL NOT NULL UNIQUE,
	"rater_id" INTEGER NOT NULL,
	"ratee_id" INTEGER NOT NULL,
	"value" SMALLINT NOT NULL,
	"feedback" TEXT,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);


CREATE TABLE "plans" (
	"id" SERIAL NOT NULL UNIQUE,
	"alias" VARCHAR(255) NOT NULL,
	"weekly_minutes" INTEGER NOT NULL,
	"full_month_price" INTEGER NOT NULL,
	"full_quarter_price" INTEGER NOT NULL,
	"half_year_price" INTEGER NOT NULL,
	"full_year_price" INTEGER NOT NULL,
	"full_month_discount" INTEGER NOT NULL,
	"full_quarter_discount" INTEGER NOT NULL,
	"half_year_discount" INTEGER NOT NULL,
	"full_year_discount" INTEGER NOT NULL,
	"active" BOOLEAN NOT NULL,
	"for_invites_only" BOOLEAN NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	"created_by" INTEGER NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	"updated_by" INTEGER NOT NULL,
	PRIMARY KEY("id")
);


CREATE TABLE "coupons" (
	"id" SERIAL NOT NULL UNIQUE,
	"code" VARCHAR(255) NOT NULL UNIQUE,
	"plan_id" INTEGER NOT NULL,
	"full_month_discount" INTEGER NOT NULL DEFAULT 0,
	"full_quarter_discount" INTEGER NOT NULL DEFAULT 0,
	"half_year_discount" INTEGER NOT NULL DEFAULT 0,
	"full_year_discount" INTEGER NOT NULL DEFAULT 0,
	"expires_at" TIMESTAMP NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	"created_by" INTEGER NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	"updated_by" INTEGER NOT NULL,
	PRIMARY KEY("id")
);


CREATE TABLE "topics" (
	"id" SERIAL NOT NULL UNIQUE,
	"name_ar" VARCHAR(50) NOT NULL UNIQUE,
	"name_en" VARCHAR(50) NOT NULL UNIQUE,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);

CREATE INDEX "topics_index_0"
ON "topics" ("id");

CREATE TABLE "user_topics" (
	"user_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"topic_id" INTEGER NOT NULL,
	PRIMARY KEY("user_id", "topic_id")
);


CREATE TABLE "invites" (
	"id" SERIAL NOT NULL UNIQUE,
	"email" VARCHAR(50) NOT NULL UNIQUE,
	"plan_id" INTEGER NOT NULL,
	"expires_at" TIMESTAMP NOT NULL,
	"accepted_at" TIMESTAMP,
	"created_at" TIMESTAMP NOT NULL,
	"created_by" INTEGER NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	"updated_by" INTEGER NOT NULL,
	PRIMARY KEY("id")
);

CREATE INDEX "invites_index_0"
ON "invites" ("id");

CREATE TABLE "subscriptions" (
	"id" SERIAL NOT NULL UNIQUE,
	"user_id" INTEGER NOT NULL UNIQUE,
	"plan_id" INTEGER NOT NULL,
	"plan_cycle" PLAN_CYCLE NOT NULL,
	"remaining_monthly_minutes" SMALLINT NOT NULL,
	"auto_renewal" BOOLEAN NOT NULL,
	"start" TIMESTAMP NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	"updated_by" INTEGER NOT NULL,
	PRIMARY KEY("id")
);


CREATE TABLE "reports" (
	"id" SERIAL NOT NULL UNIQUE,
	"title" VARCHAR(255) NOT NULL,
	"description" VARCHAR(1000) NOT NULL,
	"category" VARCHAR(255) NOT NULL,
	"resolved" BOOLEAN NOT NULL DEFAULT false,
	"resolved_at" TIMESTAMP,
	"created_at" TIMESTAMP NOT NULL,
	"created_by" INTEGER NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	"updated_by" INTEGER NOT NULL,
	PRIMARY KEY("id")
);

CREATE INDEX "reports_index_0"
ON "reports" ("id");

CREATE TABLE "report_replies" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"report_id" INTEGER NOT NULL,
	"message" VARCHAR(1000) NOT NULL,
	"draft" BOOLEAN,
	"created_at" TIMESTAMP NOT NULL,
	"created_by" INTEGER NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	"updated_by" INTEGER NOT NULL,
	PRIMARY KEY("id")
);

CREATE INDEX "report_replies_index_0"
ON "report_replies" ("id");

CREATE TABLE "gifts" (
	"id" SERIAL NOT NULL UNIQUE,
	"sender_id" INTEGER NOT NULL,
	"receiver_id" INTEGER NOT NULL,
	"value" INTEGER NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);


CREATE TABLE "rooms" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"created_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);

CREATE INDEX "rooms_index_0"
ON "rooms" ("id");

CREATE TABLE "room_members" (
	"user_id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"room_id" INTEGER NOT NULL,
	"pinned" BOOLEAN DEFAULT false,
	"muted" BOOLEAN DEFAULT false,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("user_id", "room_id")
);


CREATE TABLE "messages" (
	"id" SERIAL NOT NULL UNIQUE,
	"user_id" INTEGER NOT NULL,
	"room_id" INTEGER NOT NULL,
	"text" VARCHAR(1000) NOT NULL,
	"read" BOOLEAN NOT NULL,
	"deleted" BOOLEAN NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);

CREATE INDEX "messages_index_0"
ON "messages" ("id");

CREATE TABLE "withdraw_methods" (
	"type" WITHDRAW_METHOD NOT NULL UNIQUE,
	"min" INTEGER NOT NULL,
	"max" INTEGER NOT NULL,
	"enabled" BOOLEAN NOT NULL DEFAULT false,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("type")
);


CREATE TABLE "invoices" (
	"id" SERIAL NOT NULL UNIQUE,
	"user_id" INTEGER NOT NULL,
	"method" WITHDRAW_METHOD NOT NULL,
	"receiver" VARCHAR(255) NOT NULL,
	"bank" VARCHAR(5),
	"amount" INTEGER NOT NULL,
	"update" JSONB,
	"note" TEXT,
	"status" INVOICE_STATUS NOT NULL,
	"receipt" VARCHAR(255),
	"addressed_by" INTEGER NOT NULL,
	"created_at" TIMESTAMP NOT NULL,
	"updated_at" TIMESTAMP NOT NULL,
	PRIMARY KEY("id")
);

CREATE INDEX "invoices_index_0"
ON "invoices" ("id");

ALTER TABLE "tutors"
ADD FOREIGN KEY("id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "tutors"
ADD FOREIGN KEY("activated_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "rules"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "call_members"
ADD FOREIGN KEY("call_id") REFERENCES "calls"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "call_members"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "call_events"
ADD FOREIGN KEY("call_id") REFERENCES "calls"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "call_events"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "lessons"
ADD FOREIGN KEY("rule_id") REFERENCES "rules"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "lessons"
ADD FOREIGN KEY("call_id") REFERENCES "calls"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "lessons"
ADD FOREIGN KEY("canceled_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "lesson_members"
ADD FOREIGN KEY("lesson_id") REFERENCES "lessons"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "lesson_members"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "interviews"
ADD FOREIGN KEY("interviewer_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "interviews"
ADD FOREIGN KEY("interviewee_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "interviews"
ADD FOREIGN KEY("rule_id") REFERENCES "rules"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "interviews"
ADD FOREIGN KEY("call_id") REFERENCES "calls"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "interviews"
ADD FOREIGN KEY("signer") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "interviews"
ADD FOREIGN KEY("canceled_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "ratings"
ADD FOREIGN KEY("rater_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "ratings"
ADD FOREIGN KEY("ratee_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "plans"
ADD FOREIGN KEY("created_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "plans"
ADD FOREIGN KEY("updated_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "coupons"
ADD FOREIGN KEY("plan_id") REFERENCES "plans"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "coupons"
ADD FOREIGN KEY("created_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "coupons"
ADD FOREIGN KEY("updated_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "user_topics"
ADD FOREIGN KEY("topic_id") REFERENCES "topics"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "user_topics"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "invites"
ADD FOREIGN KEY("plan_id") REFERENCES "plans"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "invites"
ADD FOREIGN KEY("created_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "invites"
ADD FOREIGN KEY("updated_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "subscriptions"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "subscriptions"
ADD FOREIGN KEY("plan_id") REFERENCES "plans"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "subscriptions"
ADD FOREIGN KEY("updated_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "reports"
ADD FOREIGN KEY("created_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "reports"
ADD FOREIGN KEY("updated_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "report_replies"
ADD FOREIGN KEY("report_id") REFERENCES "reports"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "report_replies"
ADD FOREIGN KEY("updated_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "report_replies"
ADD FOREIGN KEY("created_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "gifts"
ADD FOREIGN KEY("sender_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "gifts"
ADD FOREIGN KEY("receiver_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "room_members"
ADD FOREIGN KEY("room_id") REFERENCES "rooms"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "room_members"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "messages"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "messages"
ADD FOREIGN KEY("room_id") REFERENCES "room_members"("room_id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "invoices"
ADD FOREIGN KEY("user_id") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "invoices"
ADD FOREIGN KEY("addressed_by") REFERENCES "users"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;