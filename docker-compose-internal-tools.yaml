name: internal-tools

# This compose file is used to setup all these tools which are used internally:
#   1. Docmost - documentation              : handbook.litespace.org
#   2. Kitzu   - media production managment : studio.litespace.org
#   3. Mixpost - social media managment     : social.litespace.org
# We aim to host and maintain all of our internal tools in one single server.

services:
  mixpost:
    container_name: mixpost
    image: inovector/mixpost:latest
    env_file:
      - .env.mixpost
    ports:
      - 9000:80
    volumes:
      - storage:/var/www/html/storage/app
      - logs:/var/www/html/storage/logs
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    networks:
      - mysql
      - redis

  docmost:
    container_name: docmost
    image: docmost/docmost:latest
    env_file:
      - .env.mixpost
    depends_on:
      - postgres
      - redis
    environment:
      APP_URL: "https://handbook.litespace.org"
      APP_SECRET: ${APP_SECRET}
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: "redis://redis:6379"
      MAIL_DRIVER: "smtp"
      SMTP_HOST: "mail.litespace.org"
      SMTP_PORT: 465
      SMTP_USERNAME: handbook
      SMTP_PASSWORD: ${SMTP_EMAIL_PASSOWRD}
      SMTP_SECURE: true
      MAIL_FROM_ADDRESS: handbook@litespace.org
      MAIL_FROM_NAME: LiteSpace Handbook
    ports:
      - "127.0.0.1:3006:3000"
    restart: unless-stopped
    volumes:
      - docmost:/app/data/storage
    networks:
      - postgres
      - redis

  mysql:
    container_name: mysql
    image: "mysql/mysql-server:8.0"
    env_file:
      - .env.mixpost
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
      - mysql
    volumes:
      - "mysql:/var/lib/mysql"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p ${DB_PASSWORD}"]
      retries: 3
      timeout: 5s
    restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-litespace}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis/redis-stack-server:latest
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
    volumes:
      - redis:/data
    networks:
      - redis

networks:
  postgres:
    name: postgres
    driver: bridge
  redis:
    name: redis
    driver: bridge
  mysql:
    name: mysql
    driver: bridge

volumes:
  postgres:
    name: postgres
    driver: local
  redis:
    name: redis
    driver: local
  storage:
    name: storage
    driver: local
  logs:
    name: logs
    driver: local
  mysql:
    name: mysql
    driver: local
  docmost:
    name: docmost
    driver: local
